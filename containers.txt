telecharger límage du container Ubuntu : docker pull ubuntu
lancer le container Ubuntu : sudo docker run -it ubuntu bash
docker-ce:
	sudo apt install git apt-transport-https ca-certificates curl software-properties-common
	curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
	sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"
	sudo apt update
	sudo apt install docker-ce

docker-compose :
	 sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
	 sudo chmod +x /usr/local/bin/docker-compose

copie fichier vers containera partir dúne autre session :  docker cp images.tar.gz 4abb70ccbd74:/images.tar.gz

transfert de fichiers de vm vers azure stockage : touch kafka.tar
sudo git clone https://github.com/Roccolib/discourse /ttt
docker save -o discourse_app.tar:090222 local_discourse/app:latest
!!!vider docker!!! : docker system prune
ecouter un port : sudo netstat -lpn |grep :443

Containers :
docker image load --input zookeeperimage.tar.gz
docker image ls
docker tag wurstmeister/zookeeper:latest token/zookeeper:080222
docker rmi wurstmeister/zookeeper
docker-compose -f docker-compose.yml up -d
appli speciale a installer : sudo dive bcd525e1be91 

transfert d'image :
tarrer l'image :  docker save -o kafka.tar 2dd91ce2efe1
loader l'image : docker load -i kafka.tar

liste tous les containers : docker ls -a
liste docker images : docker image ls or docker images
run a container :  docker run -d wurstmeister/zookeeper
supprimer docker container avec tag : docker rmi kafka-quickstart:0.10.2.0
supprimer image container : docker container rm 2b53e7cacf92
creer les images des conteneurs a partir de tar avec nouveau nom repertoire :  docker image  import kafkaimage.tar.gz kafkatoken:latest
lancer les containers de kafka : docker-compose -f docker-compose.yml up -d
stopper un container : docker container kill eef423a3aa60
detail d'un container :  docker container inspect 566083b3be4f



Kafka : https://towardsdatascience.com/how-to-install-apache-kafka-using-docker-the-easy-way-4ceb00817d8b
connecter au bash de kafka : docker exec -it kafka /bin/sh
creer un topic : kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic topicdetest
lister tous les topics créés : kafka-topics.sh --list --zookeeper zookeeper:2181
docker load -i zookeeperimage.tar.gz
docker run -d zookzeeper
docker load -i kafkaimage.tar.gz
docker run -d kafka --net=container:zookeeper
docker run -d -e ZOOKEEPER_CLIENT_PORT=2181 --name zookeeper zookeeper
docker run --name kafka -d -e KAFKA_ADVERTISED_HOST_NAME=kafka -e KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 -e KAFKA_CREATE_TOPICS=testtopic:1:1 --net=container:zookeeper kafka




envoyer un message de producer : kafka-console-producer.sh --broker-list localhost:9092 --topic topicdetest
consommer les messages de consumer : kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic topicdetest --from-beginning
effacer un topic : kafka-topics.sh --zookeeper zookeeper:2181 --delete --topic topicdetest



Discourse : https://www.digitalocean.com/community/tutorials/how-to-install-discourse-on-ubuntu-18-04-fr
utilisateur root : sudo -s
creer repertoire discourse : mkdir /var/discourse
clonner l'image officielle de discourse : git clone https://github.com/discourse/discourse_docker.git /var/discourse
appliquer parametres : ./discourse-setup --without test development

editer fichier de config (containers/app.yml) :
	a.  - "templates/web.ssl.template.yml"
	    - "templates/web.letsencrypt.ssl.template.yml"
	b.   DISCOURSE_HOSTNAME: forumco2.westeurope.cloudapp.azure.com
	c.   DISCOURSE_DEVELOPER_EMAILS: 'co2tokenforum@gmail.com'
	d.   DISCOURSE_SMTP_ADDRESS: smtp.gmail.com
  	     DISCOURSE_SMTP_PORT: 587
	     DISCOURSE_SMTP_USER_NAME: co2tokenforum
  	     DISCOURSE_SMTP_PASSWORD: "Azure2021"
	     DISCOURSE_SMTP_DOMAIN: gmailcom # (address to send notifications from)
  	     DISCOURSE_NOTIFICATION_EMAIL: co2tokenforum@gmailcom # (address to send notifications from)
	e.   LETSENCRYPT_ACCOUNT_EMAIL: rfahd@hotmail.com
lancer le container : ./launcher rebuild app

If message "failled to bbostrap", ./discourse-doctor






