
docker-compose -f docker-compose.yml up -d
cr√©er un topic :
  docker run -it --rm --network kafka_token_discourse_net token/kafka:120222 kafka-topics.sh --bootstrap-server kafka:9092 --create --topic topicDiscMessage
lister les topics :
  docker run -it --rm --network kafka_token_discourse_net token/kafka:120222 kafka-topics.sh --bootstrap-server kafka:9092 --list
effacer topic :
docker run -it --rm --network kafka_token_discourse_net token/kafka:120222 kafka-topics.sh --bootstrap-server kafka:9092 --delete --topic topicdiscMessage
produire message en dehors du container :
  docker run -it --rm --network kafka_token_discourse_net token/kafka:120222 kafka-console-producer.sh --bootstrap-server kafka:9092 --topic topicDiscMessage
ecouter message en dehors du container :
  docker run -it --rm --network kafka_token_discourse_net token/kafka:120222 kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic topicDiscMessage --from-beginning
lister les containers du reseau docker:
  docker network inspect -f '{{range .Containers}}{{.Name}} {{end}}' kafka_token_discourse_net
Find out if an IP address is reachable from a container
  docker exec [containerA] ping [containerB or ip_address] -c2

produire a partir du meme container :

ecouter a partir du meme container :

produire a partir d'fichier python d'un autre container :
